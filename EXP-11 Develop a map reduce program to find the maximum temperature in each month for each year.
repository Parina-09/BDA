import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.fs.Path;
import org.apache.hadoop.io.IntWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Job;
import org.apache.hadoop.mapreduce.Mapper;
import org.apache.hadoop.mapreduce.Reducer;
import org.apache.hadoop.mapreduce.lib.input.FileInputFormat;
import org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;

public class MaxTemperatureMonth {
    public static class TempMapper extends Mapper<Object, Text, Text, Text> {
        public void map(Object key, Text value, Context context) throws IOException, InterruptedException {
            String[] fields = value.toString().split("\s+");
            if (fields.length == 3) {
                String year = fields[0];
                String month = fields[1];
                String temperature = fields[2];
                context.write(new Text(year), new Text(month + " " + temperature));y
            }
        }
    }

    public static class TempReducer extends Reducer<Text, Text, Text, Text> {
        public void reduce(Text key, Iterable<Text> values, Context context) throws IOException, InterruptedException {
            String maxMonth = "";
            int maxTemp = Integer.MIN_VALUE;
            
            for (Text val : values) {
                String[] parts = val.toString().split(" ");
                String month = parts[0];
                int temp = Integer.parseInt(parts[1]);
                
                if (temp > maxTemp) {
                    maxTemp = temp;
                    maxMonth = month;
                }
            }
            context.write(key, new Text(maxMonth + " " + maxTemp));
        }
    }

    public static void main(String[] args) throws Exception {
        Configuration conf = new Configuration();
        Job job = Job.getInstance(conf, "Max Temperature Month");
        
job.setJarByClass(MaxTemperatureMonth.class);
        job.setMapperClass(TempMapper.class);
        job.setReducerClass(TempReducer.class);
        
        job.setMapOutputKeyClass(Text.class);
        job.setMapOutputValueClass(Text.class);
        job.setOutputKeyClass(Text.class);
        job.setOutputValueClass(Text.class);
        
        FileInputFormat.addInputPath(job, new Path(args[0]));
        FileOutputFormat.setOutputPath(job, new Path(args[1]));
        
        System.exit(job.waitForCompletion(true) ? 0 : 1);
    }
}
